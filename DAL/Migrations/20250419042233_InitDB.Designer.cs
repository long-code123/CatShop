// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250419042233_InitDB")]
    partial class InitDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.Entities.Human.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoginType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Customers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Hanoi",
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(4415),
                            Email = "alice@example.com",
                            LoginType = 1,
                            Name = "Alice Nguyen",
                            Password = "password1",
                            Phone = "0901234567",
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(4415)
                        },
                        new
                        {
                            Id = 2,
                            Address = "Saigon",
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(4415),
                            Email = "bob@example.com",
                            LoginType = 1,
                            Name = "Bob Tran",
                            Password = "password2",
                            Phone = "0912345678",
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(4415)
                        },
                        new
                        {
                            Id = 3,
                            Address = "Da Nang",
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(4415),
                            Email = "charlie@example.com",
                            LoginType = 0,
                            Name = "Charlie Le",
                            Password = "password3",
                            Phone = "0923456789",
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(4415)
                        },
                        new
                        {
                            Id = 4,
                            Address = "Can Tho",
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(4415),
                            Email = "david@example.com",
                            LoginType = 1,
                            Name = "David Pham",
                            Password = "password4",
                            Phone = "0934567890",
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(4415)
                        },
                        new
                        {
                            Id = 5,
                            Address = "Hue",
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(4415),
                            Email = "evelyn@example.com",
                            LoginType = 0,
                            Name = "Evelyn Hoang",
                            Password = "password5",
                            Phone = "0945678901",
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(4415)
                        },
                        new
                        {
                            Id = 6,
                            Address = "Vung Tau",
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(4415),
                            Email = "frank@example.com",
                            LoginType = 1,
                            Name = "Frank Vo",
                            Password = "password6",
                            Phone = "0956789012",
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(4415)
                        },
                        new
                        {
                            Id = 7,
                            Address = "Bien Hoa",
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(4415),
                            Email = "grace@example.com",
                            LoginType = 0,
                            Name = "Grace Bui",
                            Password = "password7",
                            Phone = "0967890123",
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(4415)
                        },
                        new
                        {
                            Id = 8,
                            Address = "Hai Phong",
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(4415),
                            Email = "henry@example.com",
                            LoginType = 0,
                            Name = "Henry Do",
                            Password = "password8",
                            Phone = "0978901234",
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(4415)
                        },
                        new
                        {
                            Id = 9,
                            Address = "Nha Trang",
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(4415),
                            Email = "isabella@example.com",
                            LoginType = 0,
                            Name = "Isabella Dang",
                            Password = "password9",
                            Phone = "0989012345",
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(4415)
                        },
                        new
                        {
                            Id = 10,
                            Address = "Quy Nhon",
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(4415),
                            Email = "jackie@example.com",
                            LoginType = 0,
                            Name = "Jackie Lam",
                            Password = "password10",
                            Phone = "0990123456",
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(4415)
                        });
                });

            modelBuilder.Entity("DAL.Entities.Pet.Cat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Age")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSold")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Cats", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = "2",
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(7240),
                            Description = "Playful Persian kitten",
                            Image = "milo.jpg",
                            IsSold = false,
                            Name = "Milo",
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(7240)
                        },
                        new
                        {
                            Id = 2,
                            Age = "1",
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(7240),
                            Description = "Elegant Siamese cat",
                            Image = "luna.jpg",
                            IsSold = false,
                            Name = "Luna",
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(7240)
                        },
                        new
                        {
                            Id = 3,
                            Age = "3",
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(7240),
                            Description = "Big and friendly Maine Coon",
                            Image = "leo.jpg",
                            IsSold = true,
                            Name = "Leo",
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(7240)
                        },
                        new
                        {
                            Id = 4,
                            Age = "1",
                            CategoryId = 4,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(7240),
                            Description = "Energetic Bengal cat",
                            Image = "zara.jpg",
                            IsSold = false,
                            Name = "Zara",
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(7240)
                        },
                        new
                        {
                            Id = 5,
                            Age = "4",
                            CategoryId = 5,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(7240),
                            Description = "Relaxed Ragdoll",
                            Image = "coco.jpg",
                            IsSold = true,
                            Name = "Coco",
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(7240)
                        },
                        new
                        {
                            Id = 6,
                            Age = "2",
                            CategoryId = 6,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(7240),
                            Description = "Plush British Shorthair",
                            Image = "tom.jpg",
                            IsSold = false,
                            Name = "Tom",
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(7240)
                        },
                        new
                        {
                            Id = 7,
                            Age = "1",
                            CategoryId = 7,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(7240),
                            Description = "Folded-ear cutie",
                            Image = "mimi.jpg",
                            IsSold = true,
                            Name = "Mimi",
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(7240)
                        },
                        new
                        {
                            Id = 8,
                            Age = "2",
                            CategoryId = 8,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(7240),
                            Description = "Hairless Sphynx",
                            Image = "nala.jpg",
                            IsSold = false,
                            Name = "Nala",
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(7240)
                        },
                        new
                        {
                            Id = 9,
                            Age = "3",
                            CategoryId = 9,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(7240),
                            Description = "Wild-looking Abyssinian",
                            Image = "simba.jpg",
                            IsSold = false,
                            Name = "Simba",
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(7240)
                        },
                        new
                        {
                            Id = 10,
                            Age = "5",
                            CategoryId = 10,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(7240),
                            Description = "Big Norwegian climber",
                            Image = "oreo.jpg",
                            IsSold = true,
                            Name = "Oreo",
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(7240)
                        });
                });

            modelBuilder.Entity("DAL.Entities.Pet.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Persian Cat",
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(8618),
                            Description = "Long-haired, calm and gentle.",
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(8618)
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Siamese Cat",
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(8618),
                            Description = "Elegant with striking blue eyes and short coat.",
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(8618)
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Maine Coon",
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(8618),
                            Description = "One of the largest domestic cats, fluffy and friendly.",
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(8618)
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Bengal Cat",
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(8618),
                            Description = "Wild-looking coat, very active and playful.",
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(8618)
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "Ragdoll",
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(8618),
                            Description = "Blue-eyed and docile, loves to be cuddled.",
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(8618)
                        },
                        new
                        {
                            Id = 6,
                            CategoryName = "British Shorthair",
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(8618),
                            Description = "Stocky with a plush coat, very calm.",
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(8618)
                        },
                        new
                        {
                            Id = 7,
                            CategoryName = "Scottish Fold",
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(8618),
                            Description = "Known for its cute folded ears.",
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(8618)
                        },
                        new
                        {
                            Id = 8,
                            CategoryName = "Sphynx Cat",
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(8618),
                            Description = "Hairless breed, very affectionate and curious.",
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(8618)
                        },
                        new
                        {
                            Id = 9,
                            CategoryName = "Abyssinian",
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(8618),
                            Description = "Short coat with a wild, ticked fur pattern.",
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(8618)
                        },
                        new
                        {
                            Id = 10,
                            CategoryName = "Norwegian Forest Cat",
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(8618),
                            Description = "Thick coat, strong and agile climber.",
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(8618)
                        });
                });

            modelBuilder.Entity("DAL.Entities.Pet.IsLove", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CatId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CatId");

                    b.HasIndex("CustomerId");

                    b.ToTable("IsLoves", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CatId = 1,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(3139),
                            CustomerId = 1,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(3139)
                        },
                        new
                        {
                            Id = 2,
                            CatId = 2,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(3139),
                            CustomerId = 2,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(3139)
                        },
                        new
                        {
                            Id = 3,
                            CatId = 3,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(3139),
                            CustomerId = 3,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(3139)
                        },
                        new
                        {
                            Id = 4,
                            CatId = 4,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(3139),
                            CustomerId = 4,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(3139)
                        },
                        new
                        {
                            Id = 5,
                            CatId = 5,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(3139),
                            CustomerId = 5,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(3139)
                        },
                        new
                        {
                            Id = 6,
                            CatId = 6,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(3139),
                            CustomerId = 6,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(3139)
                        },
                        new
                        {
                            Id = 7,
                            CatId = 7,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(3139),
                            CustomerId = 7,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(3139)
                        },
                        new
                        {
                            Id = 8,
                            CatId = 8,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(3139),
                            CustomerId = 8,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(3139)
                        },
                        new
                        {
                            Id = 9,
                            CatId = 9,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(3139),
                            CustomerId = 9,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(3139)
                        },
                        new
                        {
                            Id = 10,
                            CatId = 10,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(3139),
                            CustomerId = 10,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 307, DateTimeKind.Local).AddTicks(3139)
                        });
                });

            modelBuilder.Entity("DAL.Entities.Supplies.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 305, DateTimeKind.Local).AddTicks(6743),
                            CustomerId = 1,
                            PaymentStatus = 3,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 305, DateTimeKind.Local).AddTicks(6743)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 305, DateTimeKind.Local).AddTicks(6743),
                            CustomerId = 2,
                            PaymentStatus = 1,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 305, DateTimeKind.Local).AddTicks(6743)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 305, DateTimeKind.Local).AddTicks(6743),
                            CustomerId = 3,
                            PaymentStatus = 0,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 305, DateTimeKind.Local).AddTicks(6743)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 305, DateTimeKind.Local).AddTicks(6743),
                            CustomerId = 4,
                            PaymentStatus = 2,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 305, DateTimeKind.Local).AddTicks(6743)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 305, DateTimeKind.Local).AddTicks(6743),
                            CustomerId = 5,
                            PaymentStatus = 2,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 305, DateTimeKind.Local).AddTicks(6743)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 305, DateTimeKind.Local).AddTicks(6743),
                            CustomerId = 6,
                            PaymentStatus = 1,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 305, DateTimeKind.Local).AddTicks(6743)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 305, DateTimeKind.Local).AddTicks(6743),
                            CustomerId = 7,
                            PaymentStatus = 0,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 305, DateTimeKind.Local).AddTicks(6743)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 305, DateTimeKind.Local).AddTicks(6743),
                            CustomerId = 8,
                            PaymentStatus = 0,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 305, DateTimeKind.Local).AddTicks(6743)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 305, DateTimeKind.Local).AddTicks(6743),
                            CustomerId = 9,
                            PaymentStatus = 0,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 305, DateTimeKind.Local).AddTicks(6743)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 305, DateTimeKind.Local).AddTicks(6743),
                            CustomerId = 10,
                            PaymentStatus = 1,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 305, DateTimeKind.Local).AddTicks(6743)
                        });
                });

            modelBuilder.Entity("DAL.Entities.Supplies.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("SupplyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("SupplyId");

                    b.ToTable("OrderDetails", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(3069),
                            OrderId = 1,
                            Quantity = 2,
                            SupplyId = 1,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(3069)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(3069),
                            OrderId = 2,
                            Quantity = 1,
                            SupplyId = 3,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(3069)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(3069),
                            OrderId = 3,
                            Quantity = 1,
                            SupplyId = 2,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(3069)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(3069),
                            OrderId = 4,
                            Quantity = 1,
                            SupplyId = 4,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(3069)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(3069),
                            OrderId = 5,
                            Quantity = 2,
                            SupplyId = 5,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(3069)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(3069),
                            OrderId = 6,
                            Quantity = 3,
                            SupplyId = 6,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(3069)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(3069),
                            OrderId = 7,
                            Quantity = 1,
                            SupplyId = 7,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(3069)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(3069),
                            OrderId = 8,
                            Quantity = 2,
                            SupplyId = 8,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(3069)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(3069),
                            OrderId = 9,
                            Quantity = 1,
                            SupplyId = 9,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(3069)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(3069),
                            OrderId = 10,
                            Quantity = 2,
                            SupplyId = 10,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(3069)
                        });
                });

            modelBuilder.Entity("DAL.Entities.Supplies.Supply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("TypeSupply")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Supplies", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(4494),
                            Description = "Premium dry cat food",
                            Image = "cat_food.jpg",
                            Name = "Cat Food",
                            Price = 12.5,
                            Quantity = 100,
                            TypeSupply = 0,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(4494)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(4494),
                            Description = "Easy clean litter box",
                            Image = "litter_box.jpg",
                            Name = "Litter Box",
                            Price = 20.0,
                            Quantity = 50,
                            TypeSupply = 3,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(4494)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(4494),
                            Description = "Pack of 10 toys",
                            Image = "cat_toys.jpg",
                            Name = "Cat Toys",
                            Price = 15.0,
                            Quantity = 200,
                            TypeSupply = 1,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(4494)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(4494),
                            Description = "Multi-level climbing tree",
                            Image = "cat_tree.jpg",
                            Name = "Cat Tree",
                            Price = 70.0,
                            Quantity = 30,
                            TypeSupply = 3,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(4494)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(4494),
                            Description = "Gentle cat shampoo",
                            Image = "cat_shampoo.jpg",
                            Name = "Cat Shampoo",
                            Price = 8.5,
                            Quantity = 40,
                            TypeSupply = 2,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(4494)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(4494),
                            Description = "Double bowl set",
                            Image = "food_bowl.jpg",
                            Name = "Food Bowl",
                            Price = 10.0,
                            Quantity = 100,
                            TypeSupply = 3,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(4494)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(4494),
                            Description = "Durable scratching post",
                            Image = "scratch_post.jpg",
                            Name = "Scratching Post",
                            Price = 25.0,
                            Quantity = 60,
                            TypeSupply = 1,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(4494)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(4494),
                            Description = "Portable carrier",
                            Image = "carrier_box.jpg",
                            Name = "Carrier Box",
                            Price = 35.0,
                            Quantity = 30,
                            TypeSupply = 3,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(4494)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(4494),
                            Description = "Soft bristle brush",
                            Image = "cat_brush.jpg",
                            Name = "Cat Brush",
                            Price = 7.5,
                            Quantity = 80,
                            TypeSupply = 3,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(4494)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(4494),
                            Description = "Healthy cat snacks",
                            Image = "cat_treats.jpg",
                            Name = "Cat Treats",
                            Price = 5.0,
                            Quantity = 120,
                            TypeSupply = 0,
                            UpdatedAt = new DateTime(2025, 4, 19, 11, 22, 33, 306, DateTimeKind.Local).AddTicks(4494)
                        });
                });

            modelBuilder.Entity("DAL.Entities.Pet.Cat", b =>
                {
                    b.HasOne("DAL.Entities.Pet.Category", "Category")
                        .WithMany("Cats")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DAL.Entities.Pet.IsLove", b =>
                {
                    b.HasOne("DAL.Entities.Pet.Cat", "Cat")
                        .WithMany("IsLoves")
                        .HasForeignKey("CatId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DAL.Entities.Human.Customer", "Customer")
                        .WithMany("IsLoves")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Cat");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("DAL.Entities.Supplies.Order", b =>
                {
                    b.HasOne("DAL.Entities.Human.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("DAL.Entities.Supplies.OrderDetail", b =>
                {
                    b.HasOne("DAL.Entities.Supplies.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DAL.Entities.Supplies.Supply", "Supply")
                        .WithMany("OrderDetails")
                        .HasForeignKey("SupplyId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Order");

                    b.Navigation("Supply");
                });

            modelBuilder.Entity("DAL.Entities.Human.Customer", b =>
                {
                    b.Navigation("IsLoves");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DAL.Entities.Pet.Cat", b =>
                {
                    b.Navigation("IsLoves");
                });

            modelBuilder.Entity("DAL.Entities.Pet.Category", b =>
                {
                    b.Navigation("Cats");
                });

            modelBuilder.Entity("DAL.Entities.Supplies.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("DAL.Entities.Supplies.Supply", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
